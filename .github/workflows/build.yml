name: Build Custom Bazzite Variants

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    # Build images on Friday at 3 PM UTC (before end of work week)
    # This is approximately 11 AM EST / 8 AM PST / 4 PM CET
    - cron: '0 15 * * 5'
  workflow_dispatch:
    # Allow manual triggers if needed

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        variant: [handheld, desktop]
    
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Check if build is needed
      id: build-check
      run: |
        # Always build on push, PR, or manual dispatch (code changes)
        if [ "${{ github.event_name }}" = "push" ] || [ "${{ github.event_name }}" = "pull_request" ] || [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          echo "Code changes detected - building regardless of upstream status"
          echo "should-build=true" >> $GITHUB_OUTPUT
          echo "reason=code-changes" >> $GITHUB_OUTPUT
          exit 0
        fi
        
        # For scheduled runs (Friday builds), always build to ensure fresh images
        if [ "${{ github.event_name }}" = "schedule" ]; then
          echo "Friday scheduled build - building fresh images for the week"
          echo "should-build=true" >> $GITHUB_OUTPUT
          echo "reason=weekly-scheduled-build" >> $GITHUB_OUTPUT
          
          # Define base images for each variant to track in metadata
          if [ "${{ matrix.variant }}" = "desktop" ]; then
            BASE_IMAGE="ghcr.io/ublue-os/bazzite-deck-nvidia-gnome:latest"
          else
            BASE_IMAGE="ghcr.io/ublue-os/bazzite-deck-gnome:latest"
          fi
          
          echo "Base image for tracking: $BASE_IMAGE"
          
          # Get current digest of upstream base image for metadata
          UPSTREAM_DIGEST=$(docker buildx imagetools inspect "$BASE_IMAGE" --format '{{.Manifest.Digest}}' 2>/dev/null || echo "unknown")
          echo "Current upstream digest: $UPSTREAM_DIGEST"
          echo "upstream-digest=$UPSTREAM_DIGEST" >> $GITHUB_OUTPUT
        fi

    - name: Log in to Container Registry
      if: steps.build-check.outputs.should-build == 'true'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      if: steps.build-check.outputs.should-build == 'true'
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=raw,value=${{ matrix.variant }},enable={{is_default_branch}}
          type=raw,value=${{ matrix.variant }}-{{sha}},enable={{is_default_branch}}
        labels: |
          org.opencontainers.image.title=Custom Bazzite ${{ matrix.variant }}
          org.opencontainers.image.description=Custom Bazzite variant with VS Code and podman-docker
          org.opencontainers.image.base.digest=${{ steps.build-check.outputs.upstream-digest || 'unknown' }}
          build.trigger=${{ steps.build-check.outputs.reason || 'manual' }}
          build.schedule=friday-afternoon

    - name: Build and push Docker image
      if: steps.build-check.outputs.should-build == 'true'
      uses: docker/build-push-action@v5
      with:
        context: .
        file: Dockerfile
        target: ${{ matrix.variant }}
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Build summary
      run: |
        if [ "${{ steps.build-check.outputs.should-build }}" = "true" ]; then
          echo "✅ Built ${{ matrix.variant }} variant"
          echo "📋 Reason: ${{ steps.build-check.outputs.reason }}"
          echo "🏷️ Tags: ${{ steps.meta.outputs.tags }}"
          if [ "${{ github.event_name }}" = "schedule" ]; then
            echo "📅 Weekly Friday afternoon build completed"
          fi
        else
          echo "⏭️ Skipped ${{ matrix.variant }} variant build"
          echo "📋 Reason: ${{ steps.build-check.outputs.reason }}"
        fi
